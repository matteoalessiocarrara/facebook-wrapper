Help on module virtualbrowser:

NAME
    virtualbrowser - Browser

CLASSES
    __builtin__.object
        Browser
    
    class Browser(__builtin__.object)
     |  Methods defined here:
     |  
     |  __init__(self, default_ua='Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:41.0) Gecko/20100101 Firefox/41.0', wm_class=<class 'managers.WindowsManager'>)
     |      Apre un browser, quindi apre anche una finestra del browser
     |      
     |      Parameters
     |      ----------
     |      default_ua : str
     |              Imposta l'ua predefinito per le nuove finestre
     |      wm_class: managers.WindowsManager
     |              Si può specificare la classe del windows manager da usare
     |  
     |  get_default_ua(self)
     |      Restituisce lo user agent predefinito per le nuove finestre
     |  
     |  set_default_ua(self, ua)
     |      Imposta lo user agent predefinito per le nuove finestre
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  default_ua
     |      Restituisce lo user agent predefinito per le nuove finestre

DATA
    DEFAULT_UA = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:41.0) Gecko/2...
    logger = <logging.Logger object>


Help on module virtualbrowser_obj:

NAME
    virtualbrowser_obj - Componenti principali del browser

CLASSES
    __builtin__.object
        Tab
        Window
    
    class Tab(__builtin__.object)
     |  Una scheda
     |  
     |  Methods defined here:
     |  
     |  __init__(self, parent_window, tab_id, url=None)
     |      Parameters
     |      ----------
     |      parent_window : Window
     |              La finestra nella quale è aperta questa scheda
     |      tab_id : str
     |              Identificatore per la scheda, generato da un oggetto TabsManager
     |      url : str
     |              Url al quale punta la scheda, può anche essere impostato in seguito
     |  
     |  close(self, closing_window=False)
     |      Chiude la scheda
     |      Se è l'ultima scheda della finestra, chiude anche la finestra
     |      
     |      Parameters
     |      ----------
     |      closing_window : bool
     |              Significa che questa scheda deve essere chiusa perché la finestra 
     |              alla quale appartiene deve essere chiusa; quindi anche se è l'ultima
     |              scheda non chiamerà il metodo di chiusura della finestra, perché già 
     |              sta per essere chiusa
     |  
     |  download_content(self)
     |      Imposta il contenuto della scheda, scaricando il contenuto dell'url impostato
     |  
     |  get_bs_content(self)
     |      Restituisce il contenuto della scheda, in un oggetto BeautifulSoup
     |  
     |  get_content(self)
     |      Restituisce il contenuto della scheda
     |  
     |  get_parent_window(self)
     |      Restituisce la finestra nella quale è aperta questa scheda
     |  
     |  get_tab_id(self)
     |      Restituisce l'identificatore di questa scheda
     |  
     |  get_url(self)
     |      Restituisce l'url al quale punta la scheda
     |  
     |  post(self, url, data=None, **kwargs)
     |      Collegamento a requests.Session.post
     |  
     |  re_load(self)
     |      Ricarica il contenuto della scheda
     |  
     |  set_url(self, url)
     |      Imposta l'url al quale punta la scheda
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  bs_content
     |      Restituisce il contenuto della scheda, in un oggetto BeautifulSoup
     |  
     |  content
     |      Restituisce il contenuto della scheda
     |  
     |  parent_window
     |      Restituisce la finestra nella quale è aperta questa scheda
     |  
     |  tab_id
     |      Restituisce l'identificatore di questa scheda
     |  
     |  url
     |      Restituisce l'url al quale punta la scheda
    
    class Window(__builtin__.object)
     |  Una finestra del browser
     |  
     |  Methods defined here:
     |  
     |  __init__(self, parent_browser, window_id, tabs_manager_class)
     |      Crea una nuova finestra, con dentro una scheda vuota
     |      
     |      Parameters
     |      ----------
     |      parent_browser : virtualbrowser.Browser
     |              Il browser che ha aperto questa finestra
     |      window_id : str
     |              Un identificatore per la finestra, di solito generato automaticamente
     |              dall'oggetto WindowsManager
     |      tabs_manager_class : managers.TabsManager
     |              La classe del gestore delle schede, è possibile specificare una classe
     |              derivata da managers.TabsManager
     |  
     |  close(self)
     |      Chiude questa finestra
     |  
     |  get_parent_browser(self)
     |      Restituisce il browser che ha creato questa finestra
     |  
     |  get_session_ua(self)
     |      Restituisce l'ua usato in questa finestra
     |  
     |  get_window_id(self)
     |      Restituisce l'idenficatore di questa finestra
     |  
     |  new_session(self)
     |      Restituisce un nuovo oggetto requests2.Session
     |  
     |  set_session_ua(self, ua)
     |      Cambia l'ua usato in questa finestra
     |      
     |      ATTENZIONE: l'ua verrà salvato nell'oggetto self.session, nel caso questo 
     |      fosse sostituito, l'ua dovrebbe essere reimpostato
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  parent_browser
     |      Restituisce il browser che ha creato questa finestra
     |  
     |  session_ua
     |      Restituisce l'ua usato in questa finestra
     |  
     |  win_id
     |      Restituisce l'idenficatore di questa finestra

DATA
    logger = <logging.Logger object>


Help on module managers:

NAME
    managers - Oggetti che gestiscono liste di oggetti

CLASSES
    __builtin__.object
        Manager
            TabsManager
            WindowsManager
    
    class Manager(__builtin__.object)
     |  Gestisce liste di oggetti associati ad id unici
     |  Ovvero dizionari nella forma: {'id_unico': oggetto, ...}
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Attenzione!! Deve essere chiamato anche dalle classi derivate!!
     |  
     |  __repr__(self)
     |      Questo oggetto viene rappresentato come un dizionario, con questa struttura:
     |      {'id_unico': oggetto, ...}
     |  
     |  get_obj_dict(self)
     |      Restituisce il dizionario dove sono tenuti gli oggetti
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  obj_dict
     |      Restituisce il dizionario dove sono tenuti gli oggetti
    
    class TabsManager(Manager)
     |  Gestore delle schede
     |  
     |  Method resolution order:
     |      TabsManager
     |      Manager
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, parent_window)
     |      Parameters
     |      ----------
     |      parent_window : virtualbrowser_obj.Window
     |              La finestra alla quale appartiene questo gestore delle schede
     |  
     |  add_tab(self, url=None, tab_class=<class 'virtualbrowser_obj.Tab'>)
     |      Crea una nuova scheda, e restituisce la scheda creata
     |      
     |      Parameters
     |      ----------
     |      url : str
     |              Url al quale punta la scheda, può anche essere impostato in seguito
     |      tab_class : virtualbrowser_obj.Tab
     |              Si può specificare la classe della nuova scheda, dovrebbe
     |              eventualmente essere derivata da virtualbrowser_obj.Tab
     |  
     |  get_parent_window(self)
     |      Restituisce la finestra alla quale appartiene questo gestore delle schede
     |  
     |  get_tabs(self)
     |      Restituisce il dizionario con le schede
     |  
     |  reload_tabs(self)
     |      Ricarica tutte le schede nella finestra
     |  
     |  remove_tab(self, id_)
     |      Rimuove una scheda dalla lista delle schede
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  parent_window
     |      Restituisce la finestra alla quale appartiene questo gestore delle schede
     |  
     |  tabs
     |      Restituisce il dizionario con le schede
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Manager:
     |  
     |  __repr__(self)
     |      Questo oggetto viene rappresentato come un dizionario, con questa struttura:
     |      {'id_unico': oggetto, ...}
     |  
     |  get_obj_dict(self)
     |      Restituisce il dizionario dove sono tenuti gli oggetti
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Manager:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  obj_dict
     |      Restituisce il dizionario dove sono tenuti gli oggetti
    
    class WindowsManager(Manager)
     |  Gestisce le finestre del browser
     |  
     |  Method resolution order:
     |      WindowsManager
     |      Manager
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, parent_browser)
     |      Parameters
     |      ----------
     |      parent_browser : virtualbrowser.Browser
     |              Il browser al quale appartiene questo gestore delle finestre
     |  
     |  add_window(self, window_class=<class 'virtualbrowser_obj.Window'>, tabs_manager_class=<class 'managers.TabsManager'>)
     |      Crea una nuova finestra
     |      Restituisce la finestra creata
     |      
     |      Parameters
     |      ----------
     |      window_class : virtualbrowser_obj.Window
     |              Eventualmente, si può usare una classe derivata da virtualbrowser_obj.Window
     |              per la nuova finestra
     |      tabs_manager_class : managers.TabsManager
     |              La classe del gestore delle schede per la nuova finestra
     |  
     |  get_parent_browser(self)
     |      Restituisce il browser al quale appartiene questo gestore delle finestre
     |  
     |  get_windows(self)
     |      Restituisce la lista delle finestre
     |  
     |  remove_window(self, id_)
     |      Rimuove una finestra dalla lista delle finestre
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  parent_browser
     |      Restituisce il browser al quale appartiene questo gestore delle finestre
     |  
     |  windows
     |      Restituisce la lista delle finestre
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Manager:
     |  
     |  __repr__(self)
     |      Questo oggetto viene rappresentato come un dizionario, con questa struttura:
     |      {'id_unico': oggetto, ...}
     |  
     |  get_obj_dict(self)
     |      Restituisce il dizionario dove sono tenuti gli oggetti
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Manager:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  obj_dict
     |      Restituisce il dizionario dove sono tenuti gli oggetti

DATA
    logger = <logging.Logger object>


Help on module requests2:

NAME
    requests2 - Estensione della libreria requests

CLASSES
    requests.sessions.Session(requests.sessions.SessionRedirectMixin)
        Session
    
    class Session(requests.sessions.Session)
     |  Versione modificata di requests.Session
     |  
     |  Method resolution order:
     |      Session
     |      requests.sessions.Session
     |      requests.sessions.SessionRedirectMixin
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |  
     |  get2(self, url, **kwargs)
     |      Versione modificata di get
     |      
     |      * Controlla che questo oggetto non sia condiviso fra più processi
     |      * Crea un eccezione HTTPError quando necessario
     |      * Stampa informazioni di debug
     |  
     |  get_owner_pid(self)
     |      Restituisce il pid del processo creatore
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  owner_pid
     |      Restituisce il pid del processo creatore
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from requests.sessions.Session:
     |  
     |  __enter__(self)
     |  
     |  __exit__(self, *args)
     |  
     |  __getstate__(self)
     |  
     |  __setstate__(self, state)
     |  
     |  close(self)
     |      Closes all adapters and as such the session
     |  
     |  delete(self, url, **kwargs)
     |      Sends a DELETE request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  get(self, url, **kwargs)
     |      Sends a GET request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  get_adapter(self, url)
     |      Returns the appropriate connnection adapter for the given URL.
     |  
     |  head(self, url, **kwargs)
     |      Sends a HEAD request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  merge_environment_settings(self, url, proxies, stream, verify, cert)
     |      Check the environment and merge it with some settings.
     |  
     |  mount(self, prefix, adapter)
     |      Registers a connection adapter to a prefix.
     |      
     |      Adapters are sorted in descending order by key length.
     |  
     |  options(self, url, **kwargs)
     |      Sends a OPTIONS request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  patch(self, url, data=None, **kwargs)
     |      Sends a PATCH request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  post(self, url, data=None, json=None, **kwargs)
     |      Sends a POST request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.
     |      :param json: (optional) json to send in the body of the :class:`Request`.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  prepare_request(self, request)
     |      Constructs a :class:`PreparedRequest <PreparedRequest>` for
     |      transmission and returns it. The :class:`PreparedRequest` has settings
     |      merged from the :class:`Request <Request>` instance and those of the
     |      :class:`Session`.
     |      
     |      :param request: :class:`Request` instance to prepare with this
     |          session's settings.
     |  
     |  put(self, url, data=None, **kwargs)
     |      Sends a PUT request. Returns :class:`Response` object.
     |      
     |      :param url: URL for the new :class:`Request` object.
     |      :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.
     |      :param \*\*kwargs: Optional arguments that ``request`` takes.
     |  
     |  request(self, method, url, params=None, data=None, headers=None, cookies=None, files=None, auth=None, timeout=None, allow_redirects=True, proxies=None, hooks=None, stream=None, verify=None, cert=None, json=None)
     |      Constructs a :class:`Request <Request>`, prepares it and sends it.
     |      Returns :class:`Response <Response>` object.
     |      
     |      :param method: method for the new :class:`Request` object.
     |      :param url: URL for the new :class:`Request` object.
     |      :param params: (optional) Dictionary or bytes to be sent in the query
     |          string for the :class:`Request`.
     |      :param data: (optional) Dictionary or bytes to send in the body of the
     |          :class:`Request`.
     |      :param json: (optional) json to send in the body of the
     |          :class:`Request`.
     |      :param headers: (optional) Dictionary of HTTP Headers to send with the
     |          :class:`Request`.
     |      :param cookies: (optional) Dict or CookieJar object to send with the
     |          :class:`Request`.
     |      :param files: (optional) Dictionary of ``'filename': file-like-objects``
     |          for multipart encoding upload.
     |      :param auth: (optional) Auth tuple or callable to enable
     |          Basic/Digest/Custom HTTP Auth.
     |      :param timeout: (optional) How long to wait for the server to send
     |          data before giving up, as a float, or a (`connect timeout, read
     |          timeout <user/advanced.html#timeouts>`_) tuple.
     |      :type timeout: float or tuple
     |      :param allow_redirects: (optional) Set to True by default.
     |      :type allow_redirects: bool
     |      :param proxies: (optional) Dictionary mapping protocol to the URL of
     |          the proxy.
     |      :param stream: (optional) whether to immediately download the response
     |          content. Defaults to ``False``.
     |      :param verify: (optional) if ``True``, the SSL cert will be verified.
     |          A CA_BUNDLE path can also be provided.
     |      :param cert: (optional) if String, path to ssl client cert file (.pem).
     |          If Tuple, ('cert', 'key') pair.
     |  
     |  send(self, request, **kwargs)
     |      Send a given PreparedRequest.
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from requests.sessions.Session:
     |  
     |  __attrs__ = ['headers', 'cookies', 'auth', 'proxies', 'hooks', 'params...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from requests.sessions.SessionRedirectMixin:
     |  
     |  rebuild_auth(self, prepared_request, response)
     |      When being redirected we may want to strip authentication from the
     |      request to avoid leaking credentials. This method intelligently removes
     |      and reapplies authentication where possible to avoid credential loss.
     |  
     |  rebuild_proxies(self, prepared_request, proxies)
     |      This method re-evaluates the proxy configuration by considering the
     |      environment variables. If we are redirected to a URL covered by
     |      NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
     |      proxy keys for this URL (in case they were stripped by a previous
     |      redirect).
     |      
     |      This method also replaces the Proxy-Authorization header where
     |      necessary.
     |  
     |  resolve_redirects(self, resp, req, stream=False, timeout=None, verify=True, cert=None, proxies=None)
     |      Receives a Response. Returns a generator of Responses.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from requests.sessions.SessionRedirectMixin:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

DATA
    logger = <logging.Logger object>


Help on module version:

NAME
    version

DESCRIPTION
    Informazioni sulla libreria - contiene le informazioni solitamente ottenibili con 
    il parametro --version nei software GNU

DATA
    copyright = 'Copyright (C) 2015 - 2016 Matteo Alessio Carrara'
    lib_name = 'lib-human-virtualbrowser'
    license = 'License GPLv3+: GNU GPL version 3 or later <http...e is NO ...
    version_major = 1
    version_minor = 0
    version_patch = 1
    version_str = '1.0.1'


